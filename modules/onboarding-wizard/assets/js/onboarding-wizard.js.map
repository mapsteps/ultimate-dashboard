{"mappings":"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","sources":["<anon>","modules/onboarding-wizard/src/onboarding-wizard.js","modules/base/assets/js/dom-utils.js"],"sourcesContent":["(() => {\n/**\n * Find an HTML element by selector.\n *\n * @param {string} selector The selector.\n * @returns {HTMLElement | null} The element or null if not found.\n */ function $776ab16a6a692098$export$77701944e3c77bc3(selector) {\n    const el = document.querySelector(selector);\n    if (el instanceof HTMLElement) return el;\n    return null;\n}\nfunction $776ab16a6a692098$export$c1ead522ca0e4e3c(selector) {\n    const nodes = document.querySelectorAll(selector);\n    const els = [];\n    for(let i = 0; i < nodes.length; i++){\n        const el = nodes[i];\n        if (el instanceof HTMLElement) els.push(el);\n    }\n    return els;\n}\nfunction $776ab16a6a692098$export$4e5337e1a9674b6(selector) {\n    const el = document.querySelector(selector);\n    if (el instanceof HTMLInputElement) return el;\n    return null;\n}\nfunction $776ab16a6a692098$export$276904e442ba468d(selector) {\n    const nodes = document.querySelectorAll(selector);\n    const els = [];\n    for(let i = 0; i < nodes.length; i++){\n        const el = nodes[i];\n        if (el instanceof HTMLInputElement) els.push(el);\n    }\n    return els;\n}\n\n\n(function($) {\n    // Cache DOM elements.\n    const page = (0, $776ab16a6a692098$export$77701944e3c77bc3)(\".udb-onboarding-wizard-page\");\n    const buttonsWrapper = (0, $776ab16a6a692098$export$77701944e3c77bc3)(\".onboarding-wizard-heatbox .heatbox-footer\");\n    const skipButton = (0, $776ab16a6a692098$export$77701944e3c77bc3)(\".onboarding-wizard-heatbox .skip-button\");\n    const saveButton = (0, $776ab16a6a692098$export$77701944e3c77bc3)(\".onboarding-wizard-heatbox .save-button\");\n    const skipWizardButton = (0, $776ab16a6a692098$export$77701944e3c77bc3)(\"#skip-setup-onboarding-wizard\");\n    const subscribeButton = (0, $776ab16a6a692098$export$77701944e3c77bc3)(\".onboarding-wizard-heatbox .subscribe-button\");\n    const skipDiscount = (0, $776ab16a6a692098$export$77701944e3c77bc3)(\".udb-onboarding-wizard-skip-discount a\");\n    const contentAfterSubscribe = (0, $776ab16a6a692098$export$c1ead522ca0e4e3c)(\"[data-udb-show-on='subscribe']\");\n    const contentAfterSkipDiscount = (0, $776ab16a6a692098$export$c1ead522ca0e4e3c)(\"[data-udb-show-on='skip-discount']\");\n    const discountNotif = (0, $776ab16a6a692098$export$77701944e3c77bc3)(\".onboarding-wizard-heatbox .for-discount\");\n    const loginRedirectCheckbox = (0, $776ab16a6a692098$export$4e5337e1a9674b6)(\"#udb_modules__login_redirect\");\n    const exploreSettingsElement = (0, $776ab16a6a692098$export$77701944e3c77bc3)(\"#onboarding-wizard-explore-settings\");\n    const dotsWrapper = (0, $776ab16a6a692098$export$77701944e3c77bc3)(\".onboarding-wizard-heatbox .udb-dots\");\n    const roleDropdown = (0, $776ab16a6a692098$export$77701944e3c77bc3)(\"#remove_by_roles\");\n    const udbOnboardingWizard = window.udbOnboardingWizard;\n    // Slider-related variables\n    const slideIndexes = [\n        \"modules\",\n        \"widgets\",\n        \"general_settings\",\n        \"custom_login_url\",\n        \"subscription\",\n        \"finished\"\n    ];\n    let currentSlide = \"modules\";\n    let doingAjax = false;\n    /**\n\t * @type {string[]} roles - The selected roles.\n\t */ let finalSelectedRoles = [];\n    /**\n\t * @type {import(\"tiny-slider\").TinySliderInstance} slider - The slider instance.\n\t */ let slider;\n    // Initialization\n    function init() {\n        if (!page || !buttonsWrapper || !skipButton || !saveButton || !discountNotif || !subscribeButton || !skipDiscount) return;\n        setupSlider();\n        setupSelect2();\n        setupEventListeners();\n    }\n    function isLoginRedirectChecked() {\n        return loginRedirectCheckbox?.checked ?? false;\n    }\n    /**\n\t * Setup the slider.\n\t */ function setupSlider() {\n        slider = window.tns({\n            container: \".udb-onboarding-wizard-slides\",\n            items: 1,\n            loop: false,\n            autoHeight: true,\n            controls: false,\n            navPosition: \"bottom\",\n            onInit: onSliderInit\n        });\n    }\n    /**\n\t * Setup select2 for the role dropdown.\n\t */ function setupSelect2() {\n        if (!roleDropdown) return;\n        $(roleDropdown).select2();\n        setAdminBarRemovalRoles($(roleDropdown).select2(\"data\"));\n        $(roleDropdown).on(\"select2:select\", function(e) {\n            const roleObjects = $(roleDropdown).select2(\"data\");\n            /**\n\t\t\t * @type {string[]} new selection - The new selection.\n\t\t\t */ var newSelections = [];\n            if (e.params.data.id === \"all\") {\n                $(roleDropdown).val(\"all\");\n                $(roleDropdown).trigger(\"change\");\n            } else if (roleObjects.length) {\n                roleObjects.forEach(function(role) {\n                    if (role.id !== \"all\") newSelections.push(role.id);\n                });\n                $(roleDropdown).val(newSelections);\n                $(roleDropdown).trigger(\"change\");\n            }\n            // Use the modified list.\n            setAdminBarRemovalRoles($(roleDropdown).select2(\"data\"));\n        });\n        $(roleDropdown).on(\"select2:unselect\", function(e) {\n            setAdminBarRemovalRoles($(roleDropdown).select2(\"data\"));\n        });\n    }\n    /**\n\t * Set the admin bar removal roles.\n\t *\n\t * @param {import(\"select2\").OptionData[]} roleObjects The role objects.\n\t */ function setAdminBarRemovalRoles(roleObjects) {\n        /**\n\t\t * @type {string[]} selectedRoles - The selected roles.\n\t\t */ var selectedRoles = [];\n        if (roleObjects.length) roleObjects.forEach(function(role) {\n            selectedRoles.push(role.id);\n        });\n        finalSelectedRoles = selectedRoles;\n    }\n    /**\n\t * Slider initialization callback\n\t *\n\t * @param {import(\"tiny-slider\").TinySliderInfo} instance The slider instance.\n\t */ function onSliderInit(instance) {\n        slider.events.on(\"indexChanged\", onSliderIndexChanged);\n        if (dotsWrapper && instance.navContainer) {\n            dotsWrapper.appendChild(instance.navContainer);\n            hideLastDots(instance);\n        }\n        setTimeout(()=>{\n            checkLoginRedirectCheckbox();\n        }, 1);\n    }\n    /**\n\t * Hide the last two dots in the slider.\n\t *\n\t * @param {import(\"tiny-slider\").TinySliderInfo} instance The slider instance.\n\t */ function hideLastDots(instance) {\n        if (dotsWrapper && instance.navContainer) {\n            const dots = instance.navContainer.children;\n            if (dots.length > 2) {\n                const lastDot = dots[dots.length - 1];\n                const secondLastDot = dots[dots.length - 2];\n                if (lastDot instanceof HTMLElement) lastDot.style.display = \"none\";\n                if (secondLastDot instanceof HTMLElement) secondLastDot.style.display = \"none\";\n            }\n        } else console.error(\"dotsWrapper is not defined.\");\n    }\n    /**\n\t * Setup event listeners.\n\t */ function setupEventListeners() {\n        skipButton?.addEventListener(\"click\", onSkipButtonClick);\n        skipWizardButton?.addEventListener(\"click\", onSkipWizardButtonClick);\n        saveButton?.addEventListener(\"click\", onSaveButtonClick);\n        subscribeButton?.addEventListener(\"click\", onSubscribeButtonClick);\n        skipDiscount?.addEventListener(\"click\", onSkipDiscountClick);\n        loginRedirectCheckbox?.addEventListener(\"change\", onLoginRedirectCheckboxClick);\n    }\n    /**\n\t * Event handler for when the slider index changes.\n\t *\n\t * @param {import(\"tiny-slider\").TinySliderInfo} e The event object.\n\t */ function onSliderIndexChanged(e) {\n        currentSlide = slideIndexes[e.index];\n        handleSlideChange(currentSlide);\n        markDotsBeforeActive(e.index);\n        toggleSkipWizardVisibility();\n        toggleExploreSettingsVisibility();\n    }\n    /**\n\t * Handle actions based on the current slide.\n\t *\n\t * @param {string} slide The current slide.\n\t */ function handleSlideChange(slide) {\n        switch(slide){\n            case \"modules\":\n                onModulesSlideSelected();\n                break;\n            case \"widgets\":\n                onWidgetsSlideSelected();\n                break;\n            case \"general_settings\":\n                onGeneralSettingsSlideSelected();\n                break;\n            case \"custom_login_url\":\n                onCustomLoginUrlSlideSelected();\n                break;\n            case \"subscription\":\n                onSubscriptionSlideSelected();\n                break;\n            case \"finished\":\n                onFinishedSlideSelected();\n                break;\n        }\n    }\n    // Toggle the visibility of the \"Skip Wizard\" button\n    function toggleSkipWizardVisibility() {\n        const skipWizardElement = (0, $776ab16a6a692098$export$77701944e3c77bc3)(\".skip-onboarding-wizard\");\n        if ([\n            \"subscription\",\n            \"finished\"\n        ].includes(currentSlide)) skipWizardElement?.classList.add(\"is-hidden\");\n        else skipWizardElement?.classList.remove(\"is-hidden\");\n    }\n    // Toggle the visibility of the \"Explore Settings\" element\n    function toggleExploreSettingsVisibility() {\n        if (currentSlide === \"finished\") exploreSettingsElement?.classList.remove(\"is-hidden\");\n    }\n    /**\n\t * Mark dots before the active one as completed.\n\t *\n\t * @param {number} activeIndex The active index.\n\t */ function markDotsBeforeActive(activeIndex) {\n        const dots = (0, $776ab16a6a692098$export$c1ead522ca0e4e3c)(\".tns-nav > button\");\n        const dotsBeforeActive = Array.from(dots).slice(0, activeIndex);\n        dotsBeforeActive.forEach((dot)=>dot.classList.add(\"completed\"));\n        dots.forEach((dot, index)=>{\n            if (index >= activeIndex) dot.classList.remove(\"completed\");\n        });\n    }\n    // Slide-specific handlers\n    function onModulesSlideSelected() {\n        discountNotif?.classList.add(\"is-hidden\");\n        buttonsWrapper?.classList.remove(\"is-hidden\");\n        updateSaveButton(\"Next\", [\n            \"js-save-widgets\",\n            \"js-save-general-settings\",\n            \"js-save-custom-login-url\"\n        ]);\n    }\n    function onWidgetsSlideSelected() {\n        updateSaveButton(\"Next\", [\n            \"js-save-general-settings\",\n            \"js-save-custom-login-url\"\n        ], \"js-save-widgets\");\n    }\n    function onGeneralSettingsSlideSelected() {\n        updateSaveButton(\"Next\", [\n            \"js-save-widgets\",\n            \"js-save-custom-login-url\"\n        ], \"js-save-general-settings\");\n    }\n    function onCustomLoginUrlSlideSelected() {\n        updateSaveButton(\"Next\", [\n            \"js-save-widgets\",\n            \"js-save-general-settings\"\n        ], \"js-save-custom-login-url\");\n    }\n    function onSubscriptionSlideSelected() {\n        discountNotif?.classList.remove(\"is-hidden\");\n        buttonsWrapper?.classList.add(\"is-hidden\");\n    }\n    function onFinishedSlideSelected() {\n        discountNotif?.classList.add(\"is-hidden\");\n        buttonsWrapper?.classList.add(\"is-hidden\");\n    }\n    /**\n\t * Update the Save button's text and classes.\n\t *\n\t * @param {string} text The text.\n\t * @param {string[]} removeClasses The classes to remove.\n\t * @param {string} addClass The class to add.\n\t */ function updateSaveButton(text, removeClasses, addClass = \"\") {\n        if (!saveButton) return;\n        removeClasses.forEach((cls)=>saveButton.classList.remove(cls));\n        if (addClass) saveButton.classList.add(addClass);\n        saveButton.textContent = text;\n    }\n    /**\n\t * Skip button click handlers\n\t */ function onSkipButtonClick() {\n        switch(currentSlide){\n            case \"modules\":\n                handleModulesSkip();\n                break;\n            case \"widgets\":\n            case \"general_settings\":\n            case \"custom_login_url\":\n                slider.goTo(\"next\");\n                break;\n            case \"subscription\":\n                window.location.href = udbOnboardingWizard?.adminUrl ?? \"\";\n                break;\n        }\n    }\n    // Handle the skip button on the modules slide\n    function handleModulesSkip() {\n        if (dotsWrapper) {\n            const dots = dotsWrapper.children;\n            if (isLoginRedirectChecked()) dots[3]?.classList.remove(\"is-hidden\");\n            else dots[3]?.classList.add(\"is-hidden\");\n        }\n        slider.goTo(\"next\");\n    }\n    function onSkipWizardButtonClick() {\n        slider.goTo(4); // Jump to discount screen\n    }\n    function onSaveButtonClick() {\n        if (doingAjax) return;\n        startLoading(saveButton);\n        let data = getSaveData();\n        ajaxPost(data, ()=>gotoNext(), saveButton);\n    }\n    function onSubscribeButtonClick() {\n        if (doingAjax) return;\n        startLoading(subscribeButton);\n        const name = (0, $776ab16a6a692098$export$4e5337e1a9674b6)(\"#udb-subscription-name\")?.value ?? \"\";\n        const email = (0, $776ab16a6a692098$export$4e5337e1a9674b6)(\"#udb-subscription-email\")?.value ?? \"\";\n        const data = {\n            action: \"udb_onboarding_wizard_subscribe\",\n            nonce: udbOnboardingWizard?.nonces.subscribe,\n            name: name,\n            email: email\n        };\n        ajaxPost(data, onSubscribeComplete, subscribeButton);\n    }\n    /**\n\t * Go to next slide.\n\t */ function gotoNext() {\n        /**\n\t\t * @type {number | \"next\" | \"prev\" | \"first\" | \"last\"} target - The id of the slide to go to. Accepts \"next\" or an index.\n\t\t */ let target = \"next\";\n        if (slider.getInfo().displayIndex === 3) target = isLoginRedirectChecked() ? target : 4;\n        slider.goTo(target);\n    }\n    function onLoginRedirectCheckboxClick() {\n        checkLoginRedirectCheckbox();\n    }\n    function checkLoginRedirectCheckbox() {\n        const sliderNav = (0, $776ab16a6a692098$export$77701944e3c77bc3)(\".onboarding-wizard-heatbox .udb-dots .tns-nav\");\n        if (!sliderNav) return;\n        const dots = sliderNav.children;\n        if (dots.length < 4) return;\n        if (isLoginRedirectChecked()) // Show 4th dot.\n        dots[3].classList.remove(\"is-hidden\");\n        else // Hide 4th dot.\n        dots[3].classList.add(\"is-hidden\");\n    }\n    // AJAX helpers\n    function getSaveData() {\n        // Gather the data to be sent in the AJAX request\n        const target = saveButton;\n        /** @type {Object} data - The data to be sent in the AJAX request. */ let data = {\n            action: \"udb_onboarding_wizard_save_modules\",\n            nonce: udbOnboardingWizard?.nonces.saveModules,\n            modules: getSelectedModules()\n        };\n        if (target?.classList.contains(\"js-save-widgets\")) data = {\n            action: \"udb_onboarding_wizard_save_widgets\",\n            nonce: udbOnboardingWizard?.nonces.saveWidgets,\n            widgets: getSelectedWidgets()\n        };\n        else if (target?.classList.contains(\"js-save-general-settings\")) data = {\n            action: \"udb_onboarding_wizard_save_general_settings\",\n            nonce: udbOnboardingWizard?.nonces.saveGeneralSettings,\n            settings: getGeneralSettings(),\n            selected_roles: finalSelectedRoles\n        };\n        else if (target?.classList.contains(\"js-save-custom-login-url\")) data = {\n            action: \"udb_onboarding_wizard_save_custom_login_url\",\n            nonce: udbOnboardingWizard?.nonces.saveCustomLoginUrl,\n            custom_login_url: getCustomLoginUrl()\n        };\n        return data;\n    }\n    function getSelectedModules() {\n        // Gather selected modules data\n        const checkboxes = (0, $776ab16a6a692098$export$276904e442ba468d)('.udb-modules-slide .module-toggle input[type=\"checkbox\"]');\n        if (!checkboxes.length) return [];\n        /**\n\t\t * @type {string[]} modules - The selected modules.\n\t\t */ const modules = [];\n        checkboxes.forEach(function(checkbox) {\n            var module = checkbox.id.replace(\"udb_modules__\", \"\");\n            if (checkbox.checked) modules.push(module);\n        });\n        return modules;\n    }\n    function getSelectedWidgets() {\n        // Gather selected widgets data\n        const checkboxes = (0, $776ab16a6a692098$export$276904e442ba468d)('.udb-widgets-slide .widget-toggle input[type=\"checkbox\"]');\n        if (!checkboxes.length) return [];\n        /**\n\t\t * @type {string[]} widgets - The selected widgets.\n\t\t */ const widgets = [];\n        checkboxes.forEach(function(checkbox) {\n            var widget = checkbox.id.replace(\"udb_widgets__\", \"\");\n            if (checkbox.checked) widgets.push(widget);\n        });\n        return widgets;\n    }\n    function getGeneralSettings() {\n        // Gather general settings data\n        var checkboxes = (0, $776ab16a6a692098$export$276904e442ba468d)('.udb-general-settings-slide .setting-toggle input[type=\"checkbox\"]');\n        if (!checkboxes.length) return [];\n        /**\n\t\t * @type {string[]} settings - The selected general settings.\n\t\t */ const settings = [];\n        checkboxes.forEach(function(checkbox) {\n            var setting = checkbox.id.replace(\"udb_settings__\", \"\");\n            if (checkbox.checked) settings.push(setting);\n        });\n        return settings;\n    }\n    function getCustomLoginUrl() {\n        // Gather custom login URL data\n        const customLoginUrlField = (0, $776ab16a6a692098$export$4e5337e1a9674b6)(\"#udb_login_redirect\");\n        return customLoginUrlField?.value ?? \"\";\n    }\n    /**\n\t * AJAX post.\n\t *\n\t * @param {Object} data The data to be sent.\n\t * @param {Function} successCallback The success callback function.\n\t * @param {HTMLElement|null|undefined} button The button element.\n\t */ function ajaxPost(data, successCallback, button) {\n        doingAjax = true;\n        $.post(udbOnboardingWizard?.ajaxUrl ?? \"\", data, function(response) {\n            doingAjax = false;\n            stopLoading(button);\n            if (response.success) successCallback();\n            else alert(response.data); // Handle unsuccessful response\n        }).fail(onAjaxFail).always(function() {\n            stopLoading(button);\n        });\n    }\n    /**\n\t * Handle AJAX failure.\n\t *\n\t * @param {JQueryXHR} jqXHR The jQuery XHR object.\n\t */ function onAjaxFail(jqXHR) {\n        var errorMesssage = \"Something went wrong\";\n        if (jqXHR.responseJSON && jqXHR.responseJSON.data) errorMesssage = jqXHR.responseJSON.data;\n        alert(errorMesssage);\n    }\n    /**\n\t * Start loading.\n\t *\n\t * @param {HTMLElement|null|undefined} button The button element.\n\t */ function startLoading(button) {\n        button?.classList.add(\"is-loading\");\n    }\n    /**\n\t * Stop loading.\n\t *\n\t * @param {HTMLElement|null|undefined} button The button element.\n\t */ function stopLoading(button) {\n        button?.classList.remove(\"is-loading\");\n    }\n    /**\n\t * Onboarding subscription complete.\n\t */ function onSubscribeComplete() {\n        toggleContentVisibility(contentAfterSubscribe);\n        toggleContentVisibility(discountNotif, false);\n        toggleContentVisibility(contentAfterSkipDiscount, false);\n        hideSetupWizardSubmenuItem();\n        slider.goTo(\"next\");\n    }\n    /**\n\t * Toggle content visibility.\n\t *\n\t * @param {HTMLElement[]|HTMLElement|null} elements The elements to toggle.\n\t * @param {boolean} visible The visibility state.\n\t */ function toggleContentVisibility(elements, visible = true) {\n        // Check if elements exist\n        if (!elements) return;\n        if (Array.isArray(elements)) elements.forEach((el)=>el.classList.toggle(\"is-hidden\", !visible));\n        else // If it's a single element, apply the class directly\n        elements.classList.toggle(\"is-hidden\", !visible);\n    }\n    /**\n\t * Skip discount click handler.\n\t *\n\t * @param {MouseEvent} e The event object.\n\t */ function onSkipDiscountClick(e) {\n        e.preventDefault();\n        if (doingAjax) return;\n        // Start loading on the skip discount button's parent node\n        startLoading(skipDiscount?.parentElement);\n        const data = {\n            action: \"udb_onboarding_wizard_skip_discount\",\n            nonce: udbOnboardingWizard?.nonces.skipDiscount\n        };\n        ajaxPost(data, onSkipDiscountComplete, skipDiscount?.parentElement);\n    }\n    /**\n\t * Callback function after the AJAX request completes successfully.\n\t */ function onSkipDiscountComplete() {\n        toggleContentVisibility(contentAfterSubscribe, false);\n        toggleContentVisibility(discountNotif, false);\n        toggleContentVisibility(contentAfterSkipDiscount);\n        hideSetupWizardSubmenuItem();\n        slider.goTo(\"next\");\n    }\n    /**\n\t * Hide the \"Setup Wizard\" submenu item.\n\t */ function hideSetupWizardSubmenuItem() {\n        const submenuItems = (0, $776ab16a6a692098$export$c1ead522ca0e4e3c)(\"#menu-posts-udb_widgets .wp-submenu > li > a\");\n        if (!submenuItems.length) return;\n        for(let i = 0; i < submenuItems.length; i++){\n            const link = submenuItems[i];\n            if (!(link instanceof HTMLAnchorElement)) continue;\n            if (link.href.includes(\"page=udb_onboarding_wizard\")) {\n                link.parentElement?.remove();\n                break;\n            }\n        }\n    }\n    // Initialize the script\n    init();\n})(jQuery);\n\n})();\n//# sourceMappingURL=onboarding-wizard.js.map\n","import {\n\tfindHtmlEl,\n\tfindHtmlEls,\n\tfindInputEl,\n\tfindInputEls,\n} from \"../../base/assets/js/dom-utils\";\n\n(function ($) {\n\t// Cache DOM elements.\n\tconst page = findHtmlEl(\".udb-onboarding-wizard-page\");\n\tconst buttonsWrapper = findHtmlEl(\n\t\t\".onboarding-wizard-heatbox .heatbox-footer\"\n\t);\n\tconst skipButton = findHtmlEl(\".onboarding-wizard-heatbox .skip-button\");\n\tconst saveButton = findHtmlEl(\".onboarding-wizard-heatbox .save-button\");\n\tconst skipWizardButton = findHtmlEl(\"#skip-setup-onboarding-wizard\");\n\tconst subscribeButton = findHtmlEl(\n\t\t\".onboarding-wizard-heatbox .subscribe-button\"\n\t);\n\tconst skipDiscount = findHtmlEl(\".udb-onboarding-wizard-skip-discount a\");\n\tconst contentAfterSubscribe = findHtmlEls(\"[data-udb-show-on='subscribe']\");\n\tconst contentAfterSkipDiscount = findHtmlEls(\n\t\t\"[data-udb-show-on='skip-discount']\"\n\t);\n\tconst discountNotif = findHtmlEl(\".onboarding-wizard-heatbox .for-discount\");\n\tconst loginRedirectCheckbox = findInputEl(\"#udb_modules__login_redirect\");\n\tconst exploreSettingsElement = findHtmlEl(\n\t\t\"#onboarding-wizard-explore-settings\"\n\t);\n\tconst dotsWrapper = findHtmlEl(\".onboarding-wizard-heatbox .udb-dots\");\n\tconst roleDropdown = findHtmlEl(\"#remove_by_roles\");\n\n\tconst udbOnboardingWizard = window.udbOnboardingWizard;\n\n\t// Slider-related variables\n\tconst slideIndexes = [\n\t\t\"modules\",\n\t\t\"widgets\",\n\t\t\"general_settings\",\n\t\t\"custom_login_url\",\n\t\t\"subscription\",\n\t\t\"finished\",\n\t];\n\tlet currentSlide = \"modules\";\n\tlet doingAjax = false;\n\t/**\n\t * @type {string[]} roles - The selected roles.\n\t */\n\tlet finalSelectedRoles = [];\n\n\t/**\n\t * @type {import(\"tiny-slider\").TinySliderInstance} slider - The slider instance.\n\t */\n\tlet slider;\n\n\t// Initialization\n\tfunction init() {\n\t\tif (\n\t\t\t!page ||\n\t\t\t!buttonsWrapper ||\n\t\t\t!skipButton ||\n\t\t\t!saveButton ||\n\t\t\t!discountNotif ||\n\t\t\t!subscribeButton ||\n\t\t\t!skipDiscount\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetupSlider();\n\t\tsetupSelect2();\n\t\tsetupEventListeners();\n\t}\n\n\tfunction isLoginRedirectChecked() {\n\t\treturn loginRedirectCheckbox?.checked ?? false;\n\t}\n\n\t/**\n\t * Setup the slider.\n\t */\n\tfunction setupSlider() {\n\t\tslider = window.tns({\n\t\t\tcontainer: \".udb-onboarding-wizard-slides\",\n\t\t\titems: 1,\n\t\t\tloop: false,\n\t\t\tautoHeight: true,\n\t\t\tcontrols: false,\n\t\t\tnavPosition: \"bottom\",\n\t\t\tonInit: onSliderInit,\n\t\t});\n\t}\n\n\t/**\n\t * Setup select2 for the role dropdown.\n\t */\n\tfunction setupSelect2() {\n\t\tif (!roleDropdown) return;\n\t\t$(roleDropdown).select2();\n\n\t\tsetAdminBarRemovalRoles($(roleDropdown).select2(\"data\"));\n\n\t\t$(roleDropdown).on(\"select2:select\", function (e) {\n\t\t\tconst roleObjects = $(roleDropdown).select2(\"data\");\n\t\t\t/**\n\t\t\t * @type {string[]} new selection - The new selection.\n\t\t\t */\n\t\t\tvar newSelections = [];\n\n\t\t\tif (e.params.data.id === \"all\") {\n\t\t\t\t$(roleDropdown).val(\"all\");\n\t\t\t\t$(roleDropdown).trigger(\"change\");\n\t\t\t} else {\n\t\t\t\tif (roleObjects.length) {\n\t\t\t\t\troleObjects.forEach(function (role) {\n\t\t\t\t\t\tif (role.id !== \"all\") {\n\t\t\t\t\t\t\tnewSelections.push(role.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t$(roleDropdown).val(newSelections);\n\t\t\t\t\t$(roleDropdown).trigger(\"change\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Use the modified list.\n\t\t\tsetAdminBarRemovalRoles($(roleDropdown).select2(\"data\"));\n\t\t});\n\n\t\t$(roleDropdown).on(\"select2:unselect\", function (e) {\n\t\t\tsetAdminBarRemovalRoles($(roleDropdown).select2(\"data\"));\n\t\t});\n\t}\n\n\t/**\n\t * Set the admin bar removal roles.\n\t *\n\t * @param {import(\"select2\").OptionData[]} roleObjects The role objects.\n\t */\n\tfunction setAdminBarRemovalRoles(roleObjects) {\n\t\t/**\n\t\t * @type {string[]} selectedRoles - The selected roles.\n\t\t */\n\t\tvar selectedRoles = [];\n\n\t\tif (roleObjects.length) {\n\t\t\troleObjects.forEach(function (role) {\n\t\t\t\tselectedRoles.push(role.id);\n\t\t\t});\n\t\t}\n\n\t\tfinalSelectedRoles = selectedRoles;\n\t}\n\n\t/**\n\t * Slider initialization callback\n\t *\n\t * @param {import(\"tiny-slider\").TinySliderInfo} instance The slider instance.\n\t */\n\tfunction onSliderInit(instance) {\n\t\tslider.events.on(\"indexChanged\", onSliderIndexChanged);\n\n\t\tif (dotsWrapper && instance.navContainer) {\n\t\t\tdotsWrapper.appendChild(instance.navContainer);\n\t\t\thideLastDots(instance);\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tcheckLoginRedirectCheckbox();\n\t\t}, 1);\n\t}\n\n\t/**\n\t * Hide the last two dots in the slider.\n\t *\n\t * @param {import(\"tiny-slider\").TinySliderInfo} instance The slider instance.\n\t */\n\tfunction hideLastDots(instance) {\n\t\tif (dotsWrapper && instance.navContainer) {\n\t\t\tconst dots = instance.navContainer.children;\n\n\t\t\tif (dots.length > 2) {\n\t\t\t\tconst lastDot = dots[dots.length - 1];\n\t\t\t\tconst secondLastDot = dots[dots.length - 2];\n\n\t\t\t\tif (lastDot instanceof HTMLElement) {\n\t\t\t\t\tlastDot.style.display = \"none\";\n\t\t\t\t}\n\n\t\t\t\tif (secondLastDot instanceof HTMLElement) {\n\t\t\t\t\tsecondLastDot.style.display = \"none\";\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.error(\"dotsWrapper is not defined.\");\n\t\t}\n\t}\n\n\t/**\n\t * Setup event listeners.\n\t */\n\tfunction setupEventListeners() {\n\t\tskipButton?.addEventListener(\"click\", onSkipButtonClick);\n\t\tskipWizardButton?.addEventListener(\"click\", onSkipWizardButtonClick);\n\t\tsaveButton?.addEventListener(\"click\", onSaveButtonClick);\n\t\tsubscribeButton?.addEventListener(\"click\", onSubscribeButtonClick);\n\t\tskipDiscount?.addEventListener(\"click\", onSkipDiscountClick);\n\n\t\tloginRedirectCheckbox?.addEventListener(\n\t\t\t\"change\",\n\t\t\tonLoginRedirectCheckboxClick\n\t\t);\n\t}\n\n\t/**\n\t * Event handler for when the slider index changes.\n\t *\n\t * @param {import(\"tiny-slider\").TinySliderInfo} e The event object.\n\t */\n\tfunction onSliderIndexChanged(e) {\n\t\tcurrentSlide = slideIndexes[e.index];\n\t\thandleSlideChange(currentSlide);\n\t\tmarkDotsBeforeActive(e.index);\n\t\ttoggleSkipWizardVisibility();\n\t\ttoggleExploreSettingsVisibility();\n\t}\n\n\t/**\n\t * Handle actions based on the current slide.\n\t *\n\t * @param {string} slide The current slide.\n\t */\n\tfunction handleSlideChange(slide) {\n\t\tswitch (slide) {\n\t\t\tcase \"modules\":\n\t\t\t\tonModulesSlideSelected();\n\t\t\t\tbreak;\n\t\t\tcase \"widgets\":\n\t\t\t\tonWidgetsSlideSelected();\n\t\t\t\tbreak;\n\t\t\tcase \"general_settings\":\n\t\t\t\tonGeneralSettingsSlideSelected();\n\t\t\t\tbreak;\n\t\t\tcase \"custom_login_url\":\n\t\t\t\tonCustomLoginUrlSlideSelected();\n\t\t\t\tbreak;\n\t\t\tcase \"subscription\":\n\t\t\t\tonSubscriptionSlideSelected();\n\t\t\t\tbreak;\n\t\t\tcase \"finished\":\n\t\t\t\tonFinishedSlideSelected();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Toggle the visibility of the \"Skip Wizard\" button\n\tfunction toggleSkipWizardVisibility() {\n\t\tconst skipWizardElement = findHtmlEl(\".skip-onboarding-wizard\");\n\t\tif ([\"subscription\", \"finished\"].includes(currentSlide)) {\n\t\t\tskipWizardElement?.classList.add(\"is-hidden\");\n\t\t} else {\n\t\t\tskipWizardElement?.classList.remove(\"is-hidden\");\n\t\t}\n\t}\n\n\t// Toggle the visibility of the \"Explore Settings\" element\n\tfunction toggleExploreSettingsVisibility() {\n\t\tif (currentSlide === \"finished\") {\n\t\t\texploreSettingsElement?.classList.remove(\"is-hidden\");\n\t\t}\n\t}\n\n\t/**\n\t * Mark dots before the active one as completed.\n\t *\n\t * @param {number} activeIndex The active index.\n\t */\n\tfunction markDotsBeforeActive(activeIndex) {\n\t\tconst dots = findHtmlEls(\".tns-nav > button\");\n\t\tconst dotsBeforeActive = Array.from(dots).slice(0, activeIndex);\n\t\tdotsBeforeActive.forEach((dot) => dot.classList.add(\"completed\"));\n\t\tdots.forEach((dot, index) => {\n\t\t\tif (index >= activeIndex) dot.classList.remove(\"completed\");\n\t\t});\n\t}\n\n\t// Slide-specific handlers\n\tfunction onModulesSlideSelected() {\n\t\tdiscountNotif?.classList.add(\"is-hidden\");\n\t\tbuttonsWrapper?.classList.remove(\"is-hidden\");\n\t\tupdateSaveButton(\"Next\", [\n\t\t\t\"js-save-widgets\",\n\t\t\t\"js-save-general-settings\",\n\t\t\t\"js-save-custom-login-url\",\n\t\t]);\n\t}\n\n\tfunction onWidgetsSlideSelected() {\n\t\tupdateSaveButton(\n\t\t\t\"Next\",\n\t\t\t[\"js-save-general-settings\", \"js-save-custom-login-url\"],\n\t\t\t\"js-save-widgets\"\n\t\t);\n\t}\n\n\tfunction onGeneralSettingsSlideSelected() {\n\t\tupdateSaveButton(\n\t\t\t\"Next\",\n\t\t\t[\"js-save-widgets\", \"js-save-custom-login-url\"],\n\t\t\t\"js-save-general-settings\"\n\t\t);\n\t}\n\n\tfunction onCustomLoginUrlSlideSelected() {\n\t\tupdateSaveButton(\n\t\t\t\"Next\",\n\t\t\t[\"js-save-widgets\", \"js-save-general-settings\"],\n\t\t\t\"js-save-custom-login-url\"\n\t\t);\n\t}\n\n\tfunction onSubscriptionSlideSelected() {\n\t\tdiscountNotif?.classList.remove(\"is-hidden\");\n\t\tbuttonsWrapper?.classList.add(\"is-hidden\");\n\t}\n\n\tfunction onFinishedSlideSelected() {\n\t\tdiscountNotif?.classList.add(\"is-hidden\");\n\t\tbuttonsWrapper?.classList.add(\"is-hidden\");\n\t}\n\n\t/**\n\t * Update the Save button's text and classes.\n\t *\n\t * @param {string} text The text.\n\t * @param {string[]} removeClasses The classes to remove.\n\t * @param {string} addClass The class to add.\n\t */\n\tfunction updateSaveButton(text, removeClasses, addClass = \"\") {\n\t\tif (!saveButton) return;\n\t\tremoveClasses.forEach((cls) => saveButton.classList.remove(cls));\n\t\tif (addClass) saveButton.classList.add(addClass);\n\t\tsaveButton.textContent = text;\n\t}\n\n\t/**\n\t * Skip button click handlers\n\t */\n\tfunction onSkipButtonClick() {\n\t\tswitch (currentSlide) {\n\t\t\tcase \"modules\":\n\t\t\t\thandleModulesSkip();\n\t\t\t\tbreak;\n\t\t\tcase \"widgets\":\n\t\t\tcase \"general_settings\":\n\t\t\tcase \"custom_login_url\":\n\t\t\t\tslider.goTo(\"next\");\n\t\t\t\tbreak;\n\t\t\tcase \"subscription\":\n\t\t\t\twindow.location.href = udbOnboardingWizard?.adminUrl ?? \"\";\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Handle the skip button on the modules slide\n\tfunction handleModulesSkip() {\n\t\tif (dotsWrapper) {\n\t\t\tconst dots = dotsWrapper.children;\n\n\t\t\tif (isLoginRedirectChecked()) {\n\t\t\t\tdots[3]?.classList.remove(\"is-hidden\");\n\t\t\t} else {\n\t\t\t\tdots[3]?.classList.add(\"is-hidden\");\n\t\t\t}\n\t\t}\n\n\t\tslider.goTo(\"next\");\n\t}\n\n\tfunction onSkipWizardButtonClick() {\n\t\tslider.goTo(4); // Jump to discount screen\n\t}\n\n\tfunction onSaveButtonClick() {\n\t\tif (doingAjax) return;\n\t\tstartLoading(saveButton);\n\n\t\tlet data = getSaveData();\n\n\t\tajaxPost(data, () => gotoNext(), saveButton);\n\t}\n\n\tfunction onSubscribeButtonClick() {\n\t\tif (doingAjax) return;\n\t\tstartLoading(subscribeButton);\n\t\tconst name = findInputEl(\"#udb-subscription-name\")?.value ?? \"\";\n\t\tconst email = findInputEl(\"#udb-subscription-email\")?.value ?? \"\";\n\t\tconst data = {\n\t\t\taction: \"udb_onboarding_wizard_subscribe\",\n\t\t\tnonce: udbOnboardingWizard?.nonces.subscribe,\n\t\t\tname: name,\n\t\t\temail: email,\n\t\t};\n\t\tajaxPost(data, onSubscribeComplete, subscribeButton);\n\t}\n\n\t/**\n\t * Go to next slide.\n\t */\n\tfunction gotoNext() {\n\t\t/**\n\t\t * @type {number | \"next\" | \"prev\" | \"first\" | \"last\"} target - The id of the slide to go to. Accepts \"next\" or an index.\n\t\t */\n\t\tlet target = \"next\";\n\n\t\tif (slider.getInfo().displayIndex === 3) {\n\t\t\ttarget = isLoginRedirectChecked() ? target : 4;\n\t\t}\n\n\t\tslider.goTo(target);\n\t}\n\n\tfunction onLoginRedirectCheckboxClick() {\n\t\tcheckLoginRedirectCheckbox();\n\t}\n\n\tfunction checkLoginRedirectCheckbox() {\n\t\tconst sliderNav = findHtmlEl(\n\t\t\t\".onboarding-wizard-heatbox .udb-dots .tns-nav\"\n\t\t);\n\t\tif (!sliderNav) return;\n\n\t\tconst dots = sliderNav.children;\n\n\t\tif (dots.length < 4) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isLoginRedirectChecked()) {\n\t\t\t// Show 4th dot.\n\t\t\tdots[3].classList.remove(\"is-hidden\");\n\t\t} else {\n\t\t\t// Hide 4th dot.\n\t\t\tdots[3].classList.add(\"is-hidden\");\n\t\t}\n\t}\n\n\t// AJAX helpers\n\tfunction getSaveData() {\n\t\t// Gather the data to be sent in the AJAX request\n\t\tconst target = saveButton;\n\n\t\t/** @type {Object} data - The data to be sent in the AJAX request. */\n\t\tlet data = {\n\t\t\taction: \"udb_onboarding_wizard_save_modules\",\n\t\t\tnonce: udbOnboardingWizard?.nonces.saveModules,\n\t\t\tmodules: getSelectedModules(),\n\t\t};\n\n\t\tif (target?.classList.contains(\"js-save-widgets\")) {\n\t\t\tdata = {\n\t\t\t\taction: \"udb_onboarding_wizard_save_widgets\",\n\t\t\t\tnonce: udbOnboardingWizard?.nonces.saveWidgets,\n\t\t\t\twidgets: getSelectedWidgets(),\n\t\t\t};\n\t\t} else if (target?.classList.contains(\"js-save-general-settings\")) {\n\t\t\tdata = {\n\t\t\t\taction: \"udb_onboarding_wizard_save_general_settings\",\n\t\t\t\tnonce: udbOnboardingWizard?.nonces.saveGeneralSettings,\n\t\t\t\tsettings: getGeneralSettings(),\n\t\t\t\tselected_roles: finalSelectedRoles,\n\t\t\t};\n\t\t} else if (target?.classList.contains(\"js-save-custom-login-url\")) {\n\t\t\tdata = {\n\t\t\t\taction: \"udb_onboarding_wizard_save_custom_login_url\",\n\t\t\t\tnonce: udbOnboardingWizard?.nonces.saveCustomLoginUrl,\n\t\t\t\tcustom_login_url: getCustomLoginUrl(),\n\t\t\t};\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tfunction getSelectedModules() {\n\t\t// Gather selected modules data\n\t\tconst checkboxes = findInputEls(\n\t\t\t'.udb-modules-slide .module-toggle input[type=\"checkbox\"]'\n\t\t);\n\t\tif (!checkboxes.length) return [];\n\n\t\t/**\n\t\t * @type {string[]} modules - The selected modules.\n\t\t */\n\t\tconst modules = [];\n\n\t\tcheckboxes.forEach(function (checkbox) {\n\t\t\tvar module = checkbox.id.replace(\"udb_modules__\", \"\");\n\n\t\t\tif (checkbox.checked) {\n\t\t\t\tmodules.push(module);\n\t\t\t}\n\t\t});\n\n\t\treturn modules;\n\t}\n\n\tfunction getSelectedWidgets() {\n\t\t// Gather selected widgets data\n\t\tconst checkboxes = findInputEls(\n\t\t\t'.udb-widgets-slide .widget-toggle input[type=\"checkbox\"]'\n\t\t);\n\t\tif (!checkboxes.length) return [];\n\n\t\t/**\n\t\t * @type {string[]} widgets - The selected widgets.\n\t\t */\n\t\tconst widgets = [];\n\n\t\tcheckboxes.forEach(function (checkbox) {\n\t\t\tvar widget = checkbox.id.replace(\"udb_widgets__\", \"\");\n\n\t\t\tif (checkbox.checked) {\n\t\t\t\twidgets.push(widget);\n\t\t\t}\n\t\t});\n\n\t\treturn widgets;\n\t}\n\n\tfunction getGeneralSettings() {\n\t\t// Gather general settings data\n\t\tvar checkboxes = findInputEls(\n\t\t\t'.udb-general-settings-slide .setting-toggle input[type=\"checkbox\"]'\n\t\t);\n\t\tif (!checkboxes.length) return [];\n\n\t\t/**\n\t\t * @type {string[]} settings - The selected general settings.\n\t\t */\n\t\tconst settings = [];\n\n\t\tcheckboxes.forEach(function (checkbox) {\n\t\t\tvar setting = checkbox.id.replace(\"udb_settings__\", \"\");\n\n\t\t\tif (checkbox.checked) {\n\t\t\t\tsettings.push(setting);\n\t\t\t}\n\t\t});\n\n\t\treturn settings;\n\t}\n\n\tfunction getCustomLoginUrl() {\n\t\t// Gather custom login URL data\n\t\tconst customLoginUrlField = findInputEl(\"#udb_login_redirect\");\n\t\treturn customLoginUrlField?.value ?? \"\";\n\t}\n\n\t/**\n\t * AJAX post.\n\t *\n\t * @param {Object} data The data to be sent.\n\t * @param {Function} successCallback The success callback function.\n\t * @param {HTMLElement|null|undefined} button The button element.\n\t */\n\tfunction ajaxPost(data, successCallback, button) {\n\t\tdoingAjax = true;\n\n\t\t$.post(udbOnboardingWizard?.ajaxUrl ?? \"\", data, function (response) {\n\t\t\tdoingAjax = false;\n\t\t\tstopLoading(button);\n\n\t\t\tif (response.success) {\n\t\t\t\tsuccessCallback();\n\t\t\t} else {\n\t\t\t\talert(response.data); // Handle unsuccessful response\n\t\t\t}\n\t\t})\n\t\t\t.fail(onAjaxFail)\n\t\t\t.always(function () {\n\t\t\t\tstopLoading(button);\n\t\t\t});\n\t}\n\n\t/**\n\t * Handle AJAX failure.\n\t *\n\t * @param {JQueryXHR} jqXHR The jQuery XHR object.\n\t */\n\tfunction onAjaxFail(jqXHR) {\n\t\tvar errorMesssage = \"Something went wrong\";\n\n\t\tif (jqXHR.responseJSON && jqXHR.responseJSON.data) {\n\t\t\terrorMesssage = jqXHR.responseJSON.data;\n\t\t}\n\n\t\talert(errorMesssage);\n\t}\n\n\t/**\n\t * Start loading.\n\t *\n\t * @param {HTMLElement|null|undefined} button The button element.\n\t */\n\tfunction startLoading(button) {\n\t\tbutton?.classList.add(\"is-loading\");\n\t}\n\n\t/**\n\t * Stop loading.\n\t *\n\t * @param {HTMLElement|null|undefined} button The button element.\n\t */\n\tfunction stopLoading(button) {\n\t\tbutton?.classList.remove(\"is-loading\");\n\t}\n\n\t/**\n\t * Onboarding subscription complete.\n\t */\n\tfunction onSubscribeComplete() {\n\t\ttoggleContentVisibility(contentAfterSubscribe);\n\t\ttoggleContentVisibility(discountNotif, false);\n\t\ttoggleContentVisibility(contentAfterSkipDiscount, false);\n\t\thideSetupWizardSubmenuItem();\n\n\t\tslider.goTo(\"next\");\n\t}\n\n\t/**\n\t * Toggle content visibility.\n\t *\n\t * @param {HTMLElement[]|HTMLElement|null} elements The elements to toggle.\n\t * @param {boolean} visible The visibility state.\n\t */\n\tfunction toggleContentVisibility(elements, visible = true) {\n\t\t// Check if elements exist\n\t\tif (!elements) return;\n\n\t\tif (Array.isArray(elements)) {\n\t\t\telements.forEach((el) => el.classList.toggle(\"is-hidden\", !visible));\n\t\t} else {\n\t\t\t// If it's a single element, apply the class directly\n\t\t\telements.classList.toggle(\"is-hidden\", !visible);\n\t\t}\n\t}\n\n\t/**\n\t * Skip discount click handler.\n\t *\n\t * @param {MouseEvent} e The event object.\n\t */\n\tfunction onSkipDiscountClick(e) {\n\t\te.preventDefault();\n\t\tif (doingAjax) return;\n\n\t\t// Start loading on the skip discount button's parent node\n\t\tstartLoading(skipDiscount?.parentElement);\n\n\t\tconst data = {\n\t\t\taction: \"udb_onboarding_wizard_skip_discount\",\n\t\t\tnonce: udbOnboardingWizard?.nonces.skipDiscount,\n\t\t};\n\n\t\tajaxPost(data, onSkipDiscountComplete, skipDiscount?.parentElement);\n\t}\n\n\t/**\n\t * Callback function after the AJAX request completes successfully.\n\t */\n\tfunction onSkipDiscountComplete() {\n\t\ttoggleContentVisibility(contentAfterSubscribe, false);\n\t\ttoggleContentVisibility(discountNotif, false);\n\t\ttoggleContentVisibility(contentAfterSkipDiscount);\n\t\thideSetupWizardSubmenuItem();\n\n\t\tslider.goTo(\"next\");\n\t}\n\n\t/**\n\t * Hide the \"Setup Wizard\" submenu item.\n\t */\n\tfunction hideSetupWizardSubmenuItem() {\n\t\tconst submenuItems = findHtmlEls(\n\t\t\t\"#menu-posts-udb_widgets .wp-submenu > li > a\"\n\t\t);\n\t\tif (!submenuItems.length) return;\n\n\t\tfor (let i = 0; i < submenuItems.length; i++) {\n\t\t\tconst link = submenuItems[i];\n\t\t\tif (!(link instanceof HTMLAnchorElement)) continue;\n\n\t\t\tif (link.href.includes(\"page=udb_onboarding_wizard\")) {\n\t\t\t\tlink.parentElement?.remove();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Initialize the script\n\tinit();\n})(jQuery);\n","/**\n * Find an HTML element by selector.\n *\n * @param {string} selector The selector.\n * @returns {HTMLElement | null} The element or null if not found.\n */\nexport function findHtmlEl(selector) {\n\tconst el = document.querySelector(selector);\n\n\tif (el instanceof HTMLElement) {\n\t\treturn el;\n\t}\n\n\treturn null;\n}\n\n/**\n * Find HTML elements by selector.\n *\n * @param {string} selector The selector.\n * @returns {HTMLElement[]} The HTML elements.\n */\nexport function findHtmlEls(selector) {\n\tconst nodes = document.querySelectorAll(selector);\n\tconst els = [];\n\n\tfor (let i = 0; i < nodes.length; i++) {\n\t\tconst el = nodes[i];\n\n\t\tif (el instanceof HTMLElement) {\n\t\t\tels.push(el);\n\t\t}\n\t}\n\n\treturn els;\n}\n\n/**\n * Find an HTML input element by selector.\n *\n * @param {string} selector The selector.\n * @returns {HTMLInputElement | null} The element or null if not found.\n */\nexport function findInputEl(selector) {\n\tconst el = document.querySelector(selector);\n\n\tif (el instanceof HTMLInputElement) {\n\t\treturn el;\n\t}\n\n\treturn null;\n}\n\n/**\n * Find HTML input elements by selector.\n *\n * @param {string} selector The selector.\n * @returns {HTMLInputElement[]} The HTML input elements.\n */\nexport function findInputEls(selector) {\n\tconst nodes = document.querySelectorAll(selector);\n\tconst els = [];\n\n\tfor (let i = 0; i < nodes.length; i++) {\n\t\tconst el = nodes[i];\n\n\t\tif (el instanceof HTMLInputElement) {\n\t\t\tels.push(el);\n\t\t}\n\t}\n\n\treturn els;\n}\n"],"names":["$776ab16a6a692098$export$77701944e3c77bc3","selector","el","document","querySelector","HTMLElement","$776ab16a6a692098$export$c1ead522ca0e4e3c","nodes","querySelectorAll","els","i","length","push","$776ab16a6a692098$export$4e5337e1a9674b6","HTMLInputElement","$776ab16a6a692098$export$276904e442ba468d","$","slider","page","buttonsWrapper","skipButton","saveButton","skipWizardButton","subscribeButton","skipDiscount","contentAfterSubscribe","contentAfterSkipDiscount","discountNotif","loginRedirectCheckbox","exploreSettingsElement","dotsWrapper","roleDropdown","udbOnboardingWizard","window","slideIndexes","currentSlide","doingAjax","finalSelectedRoles","isLoginRedirectChecked","checked","setAdminBarRemovalRoles","roleObjects","selectedRoles","forEach","role","id","onSliderIndexChanged","e","handleSlideChange","slide","classList","add","remove","updateSaveButton","index","markDotsBeforeActive","activeIndex","dots","dotsBeforeActive","Array","from","slice","dot","toggleSkipWizardVisibility","skipWizardElement","includes","text","removeClasses","addClass","cls","textContent","checkLoginRedirectCheckbox","sliderNav","children","ajaxPost","data","successCallback","button","post","ajaxUrl","response","stopLoading","success","alert","fail","onAjaxFail","always","jqXHR","errorMesssage","responseJSON","startLoading","onSubscribeComplete","toggleContentVisibility","hideSetupWizardSubmenuItem","goTo","elements","visible","isArray","toggle","onSkipDiscountComplete","submenuItems","link","HTMLAnchorElement","href","parentElement","tns","container","items","loop","autoHeight","controls","navPosition","onInit","instance","events","on","navContainer","appendChild","hideLastDots","lastDot","secondLastDot","style","display","console","error","setTimeout","select2","newSelections","params","val","trigger","addEventListener","handleModulesSkip","location","adminUrl","action","nonce","nonces","saveModules","modules","getSelectedModules","checkboxes","checkbox","module","replace","contains","saveWidgets","widgets","getSelectedWidgets","widget","saveGeneralSettings","settings","getGeneralSettings","setting","selected_roles","saveCustomLoginUrl","custom_login_url","getCustomLoginUrl","customLoginUrlField","value","target","getInfo","displayIndex","name","email","subscribe","preventDefault","jQuery"],"version":3,"file":"onboarding-wizard.js.map"}